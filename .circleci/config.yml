---
version: 2.1

executors:
  golang:
    docker:
    - image: circleci/golang:1.11

jobs:
  test:
    executor: golang
    working_directory: /go/src/github.com/flant/addon-operator
    steps:
      - checkout
      - run: go get -v -t -d ./...
      # TODO add vet, lint, speller
      - run: go test -v ./...

  build_image_branch:
    machine: true
    steps:
      - checkout
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      # build and push only alpine version
      - run: docker build --build-arg appVersion=$CIRCLE_BRANCH-$CIRCLE_SHA1 -t flant/addon-operator:dev -f Dockerfile-alpine3.9 .
      - run: docker push flant/addon-operator:dev

  build_image_latest:
    machine: true
    steps:
    - checkout
    - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
    # build and push ubuntu version
    - run: docker build --build-arg appVersion=$CIRCLE_BRANCH-$CIRCLE_SHA1 -t flant/addon-operator:latest .
    - run: docker push flant/addon-operator:latest
    # build and push alpine version
    - run: docker build --build-arg appVersion=$CIRCLE_BRANCH-$CIRCLE_SHA1 -t flant/addon-operator:latest-alpine3.9 -f Dockerfile-alpine3.9 .
    - run: docker push flant/addon-operator:latest-alpine3.9

  build_image_on_tag:
    machine: true
    steps:
    - checkout
    - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
    # build and push ubuntu version
    - run: docker build --build-arg appVersion=$CIRCLE_TAG -t flant/addon-operator:$CIRCLE_TAG .
    - run: docker push flant/addon-operator:$CIRCLE_TAG
    # build and push alpine version
    - run: docker build --build-arg appVersion=$CIRCLE_TAG -t flant/addon-operator:$CIRCLE_TAG-alpine3.9 -f Dockerfile-alpine3.9 .
    - run: docker push flant/addon-operator:$CIRCLE_TAG-alpine3.9


workflows:
  version: 2
  addon-operator:
    jobs:
    # run tests on every commit
    - test:
        filters:
          tags:   # required since `build_release_on_tag` has tag filters AND requires `test`
            only: /.*/
          branches:
            only: /.*/
    # test, build and publish latest images from master branch
    - build_image_latest:
        context: hub.docker.com-flant
        requires:
        - test
        filters:
          tags:
            ignore: /.*/
          branches:
            only: master
    # test, build and publish on every semver tag
    - build_image_on_tag:
        context: hub.docker.com-flant
        requires:
        - test
        filters:
          tags:
            only: /^v[0-9]+(\.[0-9]+){2}([-+].+|[^-.]*)$/
          branches:
            ignore: /.*/
      # test, build and publish a dev image for branches
    - hold_build_image_branch:
        type: approval
        requires:
          - test
        filters:
          tags:
            ignore: /.*/
          branches:
            ignore: master

      # test, build and publish a dev image for branches
    - build_image_branch:
        context: hub.docker.com-flant
        requires:
          - hold_build_image_branch
        filters:
          tags:
            ignore: /.*/
          branches:
            ignore: master
